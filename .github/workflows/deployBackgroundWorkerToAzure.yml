name: Build and deploy ASP.Net Core background handler to an Azure Web App

  # TODO: merge with deployApiToAzure

env:
  # must match to the names in deployResources.yml
  # background worker
  BACKGROUNDWORKER_NAME: BackgroundWorker
  AZURE_BACKGROUNDWORKER_NAME: backgroundarmtestapiwebapp
  AZURE_BACKGROUNDWORKER_PACKAGE_PATH: './backgroundworker'


  DOTNET_VERSION: '8'

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # TODO: split the below jobs into a single flow

  setupDeploy:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          echo "value=[\"${{ env.BACKGROUNDWORKER_NAME }}\"]" >> $GITHUB_OUTPUT

        # must be a better approach to use json configuration
      - uses: actions/upload-artifact@v4
        with:
          name: descriptionBackgroundWorker
          path: descriptionBackgroundWorker.json
      - run: |
          echo "${{ steps.matrix.outputs.value }}"

  build:
    runs-on: ubuntu-latest
    needs: setupDeploy
    strategy:
      matrix:
        value: ${{fromJSON(needs.setupDeploy.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # - name: Set up dependency caching for faster builds
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.nuget/packages
      #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nuget-

      - name: Build with dotnet
        working-directory: ./${{ matrix.value }}
        run: dotnet build --configuration Release

      - name: dotnet publish
        working-directory: ./${{ matrix.value }}
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/${{ matrix.value }}/${{ env.BACKGROUNDWORKER_NAME }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-backgroundworker
          path: ${{env.DOTNET_ROOT}}/${{ matrix.value }}/${{ env.BACKGROUNDWORKER_NAME }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-backgroundworker
          path: ${{ env.AZURE_BACKGROUNDWORKER_PACKAGE_PATH }} # Ensure this path matches where you expect the package to be downloaded

      - name: Log in to Azure using Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_BACKGROUNDWORKER_NAME }}
          # slot-name: production  # Use if you're deploying to a specific slot (optional)
          package: ${{ env.AZURE_BACKGROUNDWORKER_PACKAGE_PATH }}
